The ``4-print_square`` module
======================

Using ``print_square``
-------------------

Importing the function from the module:
>>> print_square = __import__("4-print_square").print_square

Checking for module docstring:
>>> m = __import__("4-print_square").__doc__
>>> len(m) > 1
True

Checking for function docstring:
>>> f = __import__("4-print_square").print_square.__doc__
>>> len(f) > 1
True

Checking regular print integer:
>>> print_square(2)
##
##

Checking size should to an integer:
>>> print_square('a')
Traceback (most recent call last):
...
TypeError: size must be an integer

Checking size = 0:
>>> print_square(0)
>>>

Checking size should to be biger than 0:
>>> print_square(-1)
Traceback (most recent call last):
...
ValueError: size must be >= 0

Checking size None:
>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

Checking size empty:
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'

Checking size float and less than 0:
>>> print_square(-2.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

Checking size float and less than 0:
>>> print_square(2.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

Checking size undefine:
>>> print_square(large)
Traceback (most recent call last):
...
NameError: name 'large' is not defined
